openapi: "3.1.0"
info:
  title: takos API
  version: "1.0.0"
  description: |
    takos のバックエンド API を OpenAPI 形式で記述した仕様書です。
    認証はセッション Cookie を利用します。
servers:
  - url: https://{domain}
    description: 本番環境
    variables:
      domain:
        default: example.com
  - url: http://localhost:8000
    description: ローカル開発環境
paths:
  /api/login:
    post:
      summary: ログイン
      description: パスワードまたは OAuth アクセストークンを送信しセッション Cookie を受け取ります。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - password
                  properties:
                    password:
                      type: string
                      description: ローカルログイン用パスワード
                - type: object
                  required:
                    - accessToken
                  properties:
                    accessToken:
                      type: string
                      description: OAuth ログイン用トークン
      responses:
        "200":
          description: 成功時は success フィールドを含む JSON を返します。
        "401":
          description: 認証失敗
  /api/logout:
    post:
      summary: ログアウト
      description: セッション Cookie を削除します。
      responses:
        "200":
          description: 成功
  /api/session/status:
    get:
      summary: セッション状態取得
      responses:
        "200":
          description: login フィールドを含む JSON を返します。
  /api/config:
    get:
      summary: クライアント設定取得
      responses:
        "200":
          description: OAuth 情報に加え firebase、vapidKey、Google AdSense 設定、グループ設定を含む JSON を返します。
  /api/setup/status:
    get:
      summary: 初期設定状態取得
      responses:
        "200":
          description: configured フィールドを含む JSON を返します。
  /api/setup:
    post:
      summary: 初期設定実行
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                username:
                  type: string
                displayName:
                  type: string
                follow:
                  type: array
                  items:
                    type: string
              required:
                - password
                - username
      responses:
        "200":
          description: 成功
  /api/fcm/token:
    post:
      summary: FCM トークン登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                userName:
                  type: string
              required:
                - token
                - userName
      responses:
        "200":
          description: 成功
    delete:
      summary: FCM トークン削除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: 成功
  /api/accounts:
    get:
      summary: アカウント一覧取得
      description: ローカルアカウントの一覧を取得します。
      responses:
        "200":
          description: アカウントの配列
    post:
      summary: アカウント作成
      description: 新しいローカルアカウントを作成します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                displayName:
                  type: string
                icon:
                  type: string
                  description: "/api/files でアップロードした画像の URL"
              required:
                - username
      responses:
        "201":
          description: 作成されたアカウント
  /api/accounts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: アカウント取得
      description: 対象アカウントの詳細情報を返します。
      responses:
        "200":
          description: アカウント情報
    put:
      summary: アカウント更新
      description: アカウント情報を更新します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                avatarInitial:
                  type: string
                  description: "/api/files でアップロードした画像の URL"
      responses:
        "200":
          description: 更新後のアカウント
    delete:
      summary: アカウント削除
      description: アカウントを削除します。
      responses:
        "200":
          description: 成功
  /api/accounts/{id}/dms:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: DM 設定一覧取得
      responses:
        "200":
          description: dms フィールドを含む JSON
    post:
      summary: DM 送信先追加
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  pattern: "^[^@]+@[^@]+$"
                  description: ユーザーID（ユーザー名@ドメイン）
              required:
                - target
      responses:
        "200":
          description: 更新後の dms 配列
    delete:
      summary: DM 送信先削除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  pattern: "^[^@]+@[^@]+$"
                  description: ユーザーID（ユーザー名@ドメイン）
              required:
                - target
      responses:
        "200":
          description: 更新後の dms 配列
  /api/follow:
    post:
      summary: ユーザーをフォロー
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                follower:
                  type: string
                target:
                  type: string
              required:
                - follower
                - target
      responses:
        "200":
          description: フォロー送信結果
    delete:
      summary: ユーザーのフォロー解除
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                follower:
                  type: string
                target:
                  type: string
              required:
                - follower
                - target
      responses:
        "200":
          description: アンフォロー送信結果
  /api/posts:
    get:
      summary: 投稿一覧取得
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: before
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 投稿の配列
    post:
      summary: 新規投稿
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                content:
                  type: string
              required:
                - author
                - content
      responses:
        "201":
          description: 作成された投稿
  /api/posts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: 投稿取得
      responses:
        "200":
          description: 投稿
    put:
      summary: 投稿更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        "200":
          description: 更新後の投稿
    delete:
      summary: 投稿削除
      responses:
        "200":
          description: 成功
  /api/posts/{id}/replies:
    get:
      summary: リプライ一覧取得
      responses:
        "200":
          description: リプライの配列
  /api/posts/{id}/like:
    post:
      summary: いいね
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        "200":
          description: いいね数
  /api/posts/{id}/retweet:
    post:
      summary: リツイート
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        "200":
          description: リツイート数
  /api/search:
    get:
      summary: 検索
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
          description: |
            検索クエリ。ユーザー検索では `username@domain` 形式の acct を指定してください。
        - name: type
          in: query
          schema:
            type: string
            enum: [all, users, posts]
      responses:
        "200":
          description: |
            検索結果の配列。
            リモートサーバーに問い合わせて結果が得られなかった場合は空配列を返します。
  /api/notifications:
    get:
      summary: 通知一覧
      responses:
        "200":
          description: 通知の配列
    post:
      summary: 通知作成
      responses:
        "200":
          description: 作成された通知
  /api/notifications/{id}/read:
    put:
      summary: 通知既読
      responses:
        "200":
          description: 成功
  /api/notifications/{id}:
    delete:
      summary: 通知削除
      responses:
        "200":
          description: 成功
  /api/users/{acct}:
    parameters:
      - name: acct
        in: path
        required: true
        schema:
          type: string
    get:
      summary: ユーザー情報取得
      description: |
        `user@domain` 形式のハンドルを指定して公開プロフィールを取得します。
      responses:
        "200":
          description: ユーザー情報
  /api/users/batch:
    post:
      summary: ユーザー情報バッチ取得
      description: 複数のハンドルからユーザーの公開情報をまとめて取得します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accts:
                  type: array
                  items:
                    type: string
              required:
                - accts
      responses:
        "200":
          description: ユーザー情報の配列
  /api/ogp:
    get:
      summary: OGP情報取得
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OGPデータ
  /api/dms:
    get:
      summary: DM一覧取得
      parameters:
        - name: owner
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: DMの配列
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    owner:
                      type: string
                    name:
                      type: string
                    icon:
                      type: string
    post:
      summary: DM作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                id:
                  type: string
                name:
                  type: string
                members:
                  type: array
                  items:
                    type: string
              required:
                - owner
                - id
                - name
      responses:
        "200":
          description: 作成されたDM
  /api/dms/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: DM更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                name:
                  type: string
              required:
                - owner
      responses:
        "200":
          description: 更新後のDM
      delete:
        summary: DM削除
        parameters:
          - name: owner
            in: query
            required: true
            schema:
              type: string
      responses:
        "200":
          description: 削除結果
  /api/dms/{id}/icon:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: owner
        in: query
        required: true
        schema:
          type: string
    post:
      summary: DMアイコンアップロード
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: アップロードされたアイコンのURL
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
  /api/users/{user}/messages:
    parameters:
      - name: user
        in: path
        required: true
        schema:
          type: string
    get:
      summary: メッセージ一覧取得（公開・非公開共通）
      description: 2者間のメッセージ履歴を取得します。
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: before
          in: query
          schema:
            type: string
        - name: after
          in: query
          schema:
            type: string
        - name: with
          in: query
          schema:
            type: string
      responses:
        "200":
          description: メッセージの配列
    post:
      summary: メッセージ送信
      description: メッセージを送信します。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: array
                  items:
                    type: string
                content:
                  type: string
                mediaType:
                  type: string
                encoding:
                  type: string
              required:
                - to
                - content
      responses:
        "200":
          description: 送信結果
  /api/groups:
    get:
      summary: グループ一覧取得
      parameters:
        - name: member
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 所属グループの配列
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  icon:
                    type: string
                  members:
                    type: array
                    items:
                      type: string
    post:
      summary: グループ作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - groupName
                - displayName
              properties:
                groupName:
                  type: string
                  description: グループの識別名
                displayName:
                  type: string
                  description: 表示名
                summary:
                  type: string
                  description: 概要
                membershipPolicy:
                  type: string
                  description: 参加承認方式（`approval` や `inviteOnly`）
                invitePolicy:
                  type: string
                  description: 招待の送信権限
                visibility:
                  type: string
                  description: 公開範囲
                allowInvites:
                  type: boolean
                  description: メンバーによる招待の可否
                invites:
                  type: array
                  description: `user@domain` 形式の招待先リスト
                  items:
                    type: string
      responses:
        "201":
          description: 作成成功時はグループ ID を返します。
  /api/groups/{name}:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: グループ設定更新
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                summary:
                  type: string
                icon:
                  description: アイコン
                image:
                  description: ヘッダー画像
                membershipPolicy:
                  type: string
                  description: 参加承認方式（`approval` や `inviteOnly`）
                invitePolicy:
                  type: string
                  description: 招待の送信権限
                visibility:
                  type: string
                allowInvites:
                  type: boolean
      responses:
        "200":
          description: 更新結果
  /api/groups/{name}/actor:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    patch:
      summary: グループActor編集（管理者）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                summary:
                  type: string
                icon:
                  description: アイコン
                image:
                  description: ヘッダー画像
      responses:
        "200":
          description: 更新結果
  /api/groups/{name}/invite:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    post:
      summary: グループへの招待送信
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acct:
                  type: string
                  description: 招待先の acct (`username@domain` をそのまま使用)
                inviter:
                  type: string
                  description: 招待者の acct
                ttl:
                  type: integer
                  description: 招待の有効期間（秒）
                uses:
                  type: integer
                  description: 使用可能回数
              required:
                - acct
                - inviter
                - ttl
                - uses
      responses:
        "200":
          description: 送信結果
  /api/groups/{name}/approvals:
    parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
    post:
      summary: 承認待ちリクエストの処理
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actor:
                  type: string
                  description: 申請者のActor ID
                accept:
                  type: boolean
                  description: 承認する場合は true、拒否は false
              required:
                - actor
                - accept
      responses:
        "200":
          description: 処理結果
  /api/files:
    post:
      summary: ファイルアップロード（HTTP のみ、要ログイン）
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                key:
                  type: string
                  description: 暗号化鍵（Base64）
                iv:
                  type: string
                  description: 暗号化 IV（Base64）
              required:
                - file
      responses:
        "201":
          description: アップロード結果
  /api/files/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: ファイル取得（認証不要）
      responses:
        "200":
          description: ファイルデータ
  /api/files/messages/{messageId}/{index}:
    parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
      - name: index
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: メッセージ添付ファイル取得（認証不要）
      responses:
        "200":
          description: ファイルデータ
  /.well-known/nodeinfo:
    get:
      summary: NodeInfo リンク取得
      responses:
        "200":
          description: NodeInfo へのリンクを含む JSON
  /nodeinfo/2.0:
    get:
      summary: NodeInfo 2.0
      responses:
        "200":
          description: サーバー情報を返します
