###########################################################################
# Takos Host – .env.example
# このファイルは Cloudflare Workers デプロイ時の参考用です
# 実際の設定は wrangler.toml の [vars] セクションで行います
###########################################################################

############################
# Cloudflare Workers 設定
############################
# これらの設定は wrangler.toml で行います：
# [vars]
# ACTIVITYPUB_DOMAIN = "takos.jp"
# FREE_PLAN_LIMIT = "1"
# RESERVED_SUBDOMAINS = "www,admin"
# GOOGLE_CLIENT_ID = "your-google-client-id"
# GOOGLE_CLIENT_SECRET = "your-google-client-secret"
# OBJECT_STORAGE_PROVIDER = "r2"
# R2_BUCKET = "takos_host_r2"

# D1 データベースと R2 ストレージは wrangler.toml の bindings で設定：
# [[d1_databases]]
# binding = "TAKOS_HOST_DB"
# database_id = "your-d1-database-id"
#
# [[r2_buckets]]
# binding = "takos_host_r2"
# bucket_name = "your-r2-bucket"

############################
# 主要設定項目
############################
TERMS_FILE=

############################
# メール送信 (SMTP) 設定
############################
# すべて空欄のままにすると確認メールを送信しません
# Gmail を使う場合は 2 段階認証 + 16 桁のアプリパスワードを発行してください

# SMTP サーバー
SMTP_HOST=smtp.gmail.com
# ポート番号 – SSL(465) か STARTTLS(587) のどちらかに合わせて変更
SMTP_PORT=465

# 認証情報
SMTP_USER=your_address@gmail.com
SMTP_PASS=your_app_password

# SSL / TLS 選択 (大文字で指定)  
# ACTIVITYPUB_DOMAIN: ルートドメイン（例: takos.jp）
# FREE_PLAN_LIMIT: フリープランで作成できるインスタンス数
# RESERVED_SUBDOMAINS: 使用禁止サブドメイン（カンマ区切り、例: www,admin）
# GOOGLE_CLIENT_ID: Google OAuth クライアントID
# GOOGLE_CLIENT_SECRET: Google OAuth クライアントシークレット
# OBJECT_STORAGE_PROVIDER: "r2" 固定
# R2_BUCKET: R2 バケットのバインディング名

############################
# Firebase Cloud Messaging
############################
# これらの設定も wrangler.toml の [vars] で設定します：
# FIREBASE_CLIENT_EMAIL=
# FIREBASE_PRIVATE_KEY=
# FIREBASE_API_KEY=
# FIREBASE_AUTH_DOMAIN=
# FIREBASE_PROJECT_ID=
# FIREBASE_STORAGE_BUCKET=
# FIREBASE_MESSAGING_SENDER_ID=
# FIREBASE_APP_ID=
# FIREBASE_VAPID_KEY=

############################
# デプロイ手順
############################
# 1. app/takos_host/client でクライアントをビルド:
#    cd app/takos_host/client && deno task build
#
# 2. wrangler.toml を環境に合わせて設定
#
# 3. Workers をデプロイ:
#    wrangler deploy --config wrangler.toml
#    wrangler deploy --config wrangler.tenant.toml
