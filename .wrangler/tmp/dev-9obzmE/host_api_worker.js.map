{
  "version": 3,
  "sources": ["../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/console.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/compose.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/request/constants.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/utils/body.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/utils/url.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/request.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/utils/html.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/context.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/utils/constants.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/hono-base.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router/reg-exp-router/node.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router/reg-exp-router/router.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router/smart-router/router.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router/trie-router/node.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/router/trie-router/router.js", "../../../app/takos_host/node_modules/.deno/hono@4.9.1/node_modules/hono/dist/hono.js", "../../../app/core/db/mod.ts", "../../../app/takos_host/db/d1_store.ts", "../../../app/takos_host/db/d1/schema.ts", "../../../app/takos_host/host_api_worker.ts", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-919aum/middleware-insertion-facade.js", "../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-919aum/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\shout\\Desktop\\temp\\takos\\.wrangler\\tmp\\dev-9obzmE",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "import type { Context } from \"hono\";\r\nimport type { DataStore } from \"./types.ts\";\r\n\r\n/**\r\n * DataStore \u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\u95A2\u6570\u306E\u578B\r\n * \u74B0\u5883\u5909\u6570\u3092\u53D7\u3051\u53D6\u308A\u3001DataStore \u3092\u8FD4\u3059\r\n */\r\nexport type StoreFactory = (env: Record<string, string>) => DataStore;\r\n\r\n// \u5B9F\u884C\u6642\u306B\u30DB\u30B9\u30C8\u5074\u304B\u3089\u5DEE\u3057\u8FBC\u307E\u308C\u308B\u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\r\nlet storeFactory: StoreFactory | undefined;\r\n\r\n/**\r\n * DataStore \u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\u3092\u767B\u9332\u3057\u307E\u3059\uFF08\u30DB\u30B9\u30C8\u5074\u3067\u5B9F\u88C5\u3092\u6CE8\u5165\uFF09\u3002\r\n */\r\nexport function setStoreFactory(f: StoreFactory) {\r\n  storeFactory = f;\r\n}\r\n\r\n/**\r\n * \u767B\u9332\u6E08\u307F\u306E\u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\u3092\u7528\u3044\u3066 DataStore \u3092\u751F\u6210\u3057\u307E\u3059\u3002\r\n * \u672A\u767B\u9332\u306E\u5834\u5408\u306F\u30A8\u30E9\u30FC\u306B\u3057\u307E\u3059\uFF08takos \u672C\u4F53\u306F DB \u975E\u4F9D\u5B58\u306E\u305F\u3081\uFF09\u3002\r\n */\r\nexport function createDB(env: Record<string, string>): DataStore {\r\n  if (storeFactory) return storeFactory(env);\r\n  throw new Error(\r\n    \"StoreFactory \u304C\u672A\u8A2D\u5B9A\u3067\u3059\u3002\u30DB\u30B9\u30C8\u5074\u3067 setStoreFactory(...) \u3092\u547C\u3073\u51FA\u3057\u3066\u304F\u3060\u3055\u3044\u3002\",\r\n  );\r\n}\r\n\r\nexport function getDB(c: Context): DataStore {\r\n  return c.get(\"db\") as DataStore;\r\n}\r\n", "// Cloudflare D1 \u5B9F\u88C5: Takos Host \u7528 DataStore\n// - Host \u5074\u306E API\uFF08\u30E6\u30FC\u30B6\u30FC/\u30BB\u30C3\u30B7\u30E7\u30F3/\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9/\u30C9\u30E1\u30A4\u30F3/OAuth\uFF09\u3092 D1 \u3067\u63D0\u4F9B\n// - \u30B3\u30A2\u5074\uFF08accounts/posts/...\uFF09\u306F\u672A\u5BFE\u5FDC\u306E\u305F\u3081\u3001\u672A\u4F7F\u7528\u3067\u3042\u308B\u3053\u3068\u3092\u524D\u63D0\u306B\u4F8B\u5916\u3092\u6295\u3052\u307E\u3059\n\nimport type { HostDataStore } from \"./types.ts\";\n\n// D1 \u306E\u6700\u5C0F\u578B\uFF08Workers \u306E\u5B9F\u884C\u74B0\u5883\u3067\u63D0\u4F9B\u3055\u308C\u308B\uFF09\nexport interface D1Database {\n  prepare(sql: string): {\n    bind: (...args: unknown[]) => {\n      first<T>(): Promise<T | null>;\n      all<T>(): Promise<{ results: T[] }>;\n      run(): Promise<unknown>;\n    };\n    first<T>(): Promise<T | null>;\n    all<T>(): Promise<{ results: T[] }>;\n    run(): Promise<unknown>;\n  };\n}\n\ntype Row = Record<string, unknown>;\n\nfunction notImplemented(name: string): never {\n  throw new Error(`D1 store does not implement: ${name}`);\n}\n\nfunction now(): number {\n  return Date.now();\n}\n\nfunction toBool(v: unknown): boolean {\n  return v === 1 || v === true || v === \"1\";\n}\n\nfunction json<T = unknown>(v: unknown): T | undefined {\n  if (v == null) return undefined;\n  try {\n    return JSON.parse(String(v)) as T;\n  } catch {\n    return undefined;\n  }\n}\n\n// R2 \u4E92\u63DB\u30D0\u30B1\u30C3\u30C8\u6700\u5C0F\u578B\ntype R2BucketLike = {\n  put(key: string, data: Uint8Array): Promise<unknown>;\n  get(key: string): Promise<{ arrayBuffer(): Promise<ArrayBuffer> } | null>;\n  delete(key: string): Promise<void>;\n};\n\nfunction createR2Storage(env: Record<string, string>) {\n  const bucketName = env[\"R2_BUCKET\"];\n  const binding = bucketName\n    ? (globalThis as unknown as Record<string, unknown>)[bucketName]\n    : undefined;\n  const bucket = binding as R2BucketLike | undefined;\n  if (!bucket) {\n    // \u30D5\u30A9\u30FC\u30EB\u30D0\u30C3\u30AF: \u30C0\u30DF\u30FC\u5B9F\u88C5\uFF08\u958B\u767A\u6642\u306B\u30A8\u30E9\u30FC\u3092\u907F\u3051\u308B\uFF09\n    return {\n      async put(_key: string, _data: Uint8Array) { return \"\"; },\n      async get(_key: string) { return null as Uint8Array | null; },\n      async delete(_key: string) { /* noop */ },\n    };\n  }\n  return {\n    async put(key: string, data: Uint8Array) {\n      await bucket.put(key, data);\n      return key;\n    },\n    async get(key: string) {\n      const obj = await bucket.get(key);\n      if (!obj) return null;\n      const buf = await obj.arrayBuffer();\n      return new Uint8Array(buf);\n    },\n    async delete(key: string) {\n      await bucket.delete(key);\n    },\n  };\n}\n\nexport function createD1DataStore(\n  env: Record<string, string>,\n  d1: D1Database,\n  options?: { tenantId?: string; multiTenant?: boolean },\n): HostDataStore {\n  const tenantId = options?.tenantId ?? env[\"ACTIVITYPUB_DOMAIN\"] ?? \"\";\n\n  // OBJECT_STORAGE_PROVIDER \u304C r2 \u306E\u5834\u5408\u306E\u307F R2 \u30B9\u30C8\u30EC\u30FC\u30B8\u3092\u69CB\u7BC9\n  const storage = (env[\"OBJECT_STORAGE_PROVIDER\"]?.toLowerCase() === \"r2\")\n    ? createR2Storage(env)\n    : {\n      async put() { return \"\"; },\n      async get() { return null; },\n      async delete() { /* noop */ },\n    };\n\n  return {\n    storage,\n    multiTenant: options?.multiTenant === true,\n    tenantId,\n\n    // -------------- \u30B3\u30A2\u5074\u306F\u672A\u5B9F\u88C5\uFF08\u4F7F\u7528\u7981\u6B62\uFF09 --------------\n    accounts: {\n      list: () => notImplemented(\"accounts.list\"),\n      create: () => notImplemented(\"accounts.create\"),\n      findById: () => notImplemented(\"accounts.findById\"),\n      findByUserName: () => notImplemented(\"accounts.findByUserName\"),\n      updateById: () => notImplemented(\"accounts.updateById\"),\n      deleteById: () => notImplemented(\"accounts.deleteById\"),\n      addFollower: () => notImplemented(\"accounts.addFollower\"),\n      removeFollower: () => notImplemented(\"accounts.removeFollower\"),\n      addFollowing: () => notImplemented(\"accounts.addFollowing\"),\n      removeFollowing: () => notImplemented(\"accounts.removeFollowing\"),\n      addFollowerByName: () => notImplemented(\"accounts.addFollowerByName\"),\n      removeFollowerByName: () => notImplemented(\"accounts.removeFollowerByName\"),\n      search: () => notImplemented(\"accounts.search\"),\n      updateByUserName: () => notImplemented(\"accounts.updateByUserName\"),\n      findByUserNames: () => notImplemented(\"accounts.findByUserNames\"),\n      count: () => notImplemented(\"accounts.count\"),\n    },\n    posts: {\n      findNoteById: () => notImplemented(\"posts.findNoteById\"),\n      findMessageById: () => notImplemented(\"posts.findMessageById\"),\n      findAttachmentById: () => notImplemented(\"posts.findAttachmentById\"),\n      saveObject: () => notImplemented(\"posts.saveObject\"),\n      listTimeline: () => notImplemented(\"posts.listTimeline\"),\n      follow: () => notImplemented(\"posts.follow\"),\n      unfollow: () => notImplemented(\"posts.unfollow\"),\n      saveNote: () => notImplemented(\"posts.saveNote\"),\n      updateNote: () => notImplemented(\"posts.updateNote\"),\n      deleteNote: () => notImplemented(\"posts.deleteNote\"),\n      findNotes: () => notImplemented(\"posts.findNotes\"),\n      getPublicNotes: () => notImplemented(\"posts.getPublicNotes\"),\n      saveMessage: () => notImplemented(\"posts.saveMessage\"),\n      updateMessage: () => notImplemented(\"posts.updateMessage\"),\n      deleteMessage: () => notImplemented(\"posts.deleteMessage\"),\n      findMessages: () => notImplemented(\"posts.findMessages\"),\n      updateObject: () => notImplemented(\"posts.updateObject\"),\n      deleteObject: () => notImplemented(\"posts.deleteObject\"),\n      deleteManyObjects: () => notImplemented(\"posts.deleteManyObjects\"),\n    },\n    dms: {\n      save: () => notImplemented(\"dms.save\"),\n      listBetween: () => notImplemented(\"dms.listBetween\"),\n      list: () => notImplemented(\"dms.list\"),\n      create: () => notImplemented(\"dms.create\"),\n      update: () => notImplemented(\"dms.update\"),\n      delete: () => notImplemented(\"dms.delete\"),\n    },\n    groups: {\n      list: () => notImplemented(\"groups.list\"),\n      findByName: () => notImplemented(\"groups.findByName\"),\n      create: () => notImplemented(\"groups.create\"),\n      updateByName: () => notImplemented(\"groups.updateByName\"),\n      addFollower: () => notImplemented(\"groups.addFollower\"),\n      removeFollower: () => notImplemented(\"groups.removeFollower\"),\n      pushOutbox: () => notImplemented(\"groups.pushOutbox\"),\n    },\n    invites: {\n      findOne: () => notImplemented(\"invites.findOne\"),\n      findOneAndUpdate: () => notImplemented(\"invites.findOneAndUpdate\"),\n      save: () => notImplemented(\"invites.save\"),\n      deleteOne: () => notImplemented(\"invites.deleteOne\"),\n    },\n    approvals: {\n      findOne: () => notImplemented(\"approvals.findOne\"),\n      findOneAndUpdate: () => notImplemented(\"approvals.findOneAndUpdate\"),\n      deleteOne: () => notImplemented(\"approvals.deleteOne\"),\n    },\n    notifications: {\n      list: () => notImplemented(\"notifications.list\"),\n      create: () => notImplemented(\"notifications.create\"),\n      markRead: () => notImplemented(\"notifications.markRead\"),\n      delete: () => notImplemented(\"notifications.delete\"),\n    },\n    system: {\n      findKey: () => notImplemented(\"system.findKey\"),\n      saveKey: () => notImplemented(\"system.saveKey\"),\n      findRemoteActorByUrl: () => notImplemented(\"system.findRemoteActorByUrl\"),\n      findRemoteActorsByUrls: () => notImplemented(\"system.findRemoteActorsByUrls\"),\n      upsertRemoteActor: () => notImplemented(\"system.upsertRemoteActor\"),\n    },\n    sessions: {\n      create: () => notImplemented(\"sessions.create\"),\n      findById: () => notImplemented(\"sessions.findById\"),\n      deleteById: () => notImplemented(\"sessions.deleteById\"),\n      updateExpires: () => notImplemented(\"sessions.updateExpires\"),\n      updateActivity: () => notImplemented(\"sessions.updateActivity\"),\n    },\n    fcm: {\n      register: () => notImplemented(\"fcm.register\"),\n      unregister: () => notImplemented(\"fcm.unregister\"),\n      list: () => notImplemented(\"fcm.list\"),\n    },\n    faspProviders: {\n      getSettings: async () => null,\n      list: () => notImplemented(\"faspProviders.list\"),\n      findOne: () => notImplemented(\"faspProviders.findOne\"),\n      upsertByBaseUrl: () => notImplemented(\"faspProviders.upsertByBaseUrl\"),\n      updateByBaseUrl: () => notImplemented(\"faspProviders.updateByBaseUrl\"),\n      deleteOne: () => notImplemented(\"faspProviders.deleteOne\"),\n      registrationUpsert: () => notImplemented(\"faspProviders.registrationUpsert\"),\n      listProviders: () => notImplemented(\"faspProviders.listProviders\"),\n      insertEventSubscription: () => notImplemented(\"faspProviders.insertEventSubscription\"),\n      deleteEventSubscription: () => notImplemented(\"faspProviders.deleteEventSubscription\"),\n      createBackfill: () => notImplemented(\"faspProviders.createBackfill\"),\n      continueBackfill: () => notImplemented(\"faspProviders.continueBackfill\"),\n    },\n\n    // -------------- Host \u5074\uFF08D1 \u5B9F\u88C5\uFF09 --------------\n    tenant: {\n      ensure: async (id: string) => {\n        await d1.prepare(\n          \"INSERT OR IGNORE INTO tenants (id, domain, created_at) VALUES (?1, ?2, ?3)\"\n        ).bind(id, id, now()).run();\n      },\n    },\n    host: {\n      listInstances: async (owner: string) => {\n        const { results } = await d1.prepare(\n          \"SELECT host FROM instances WHERE owner = ?1 ORDER BY created_at DESC\"\n        ).bind(owner).all<{ host: string }>();\n        return results ?? [];\n      },\n      countInstances: async (owner: string) => {\n        const row = await d1.prepare(\n          \"SELECT COUNT(1) as cnt FROM instances WHERE owner = ?1\"\n        ).bind(owner).first<{ cnt: number }>();\n        return Number((row?.cnt ?? 0));\n      },\n      findInstanceByHost: async (host: string) => {\n        const row = await d1.prepare(\n          \"SELECT id, host, owner, env_json FROM instances WHERE host = ?1\"\n        ).bind(host).first<Row>();\n        if (!row) return null;\n        return {\n          _id: String(row.id),\n          host: String(row.host),\n          owner: String(row.owner),\n          env: json<Record<string, string>>(row.env_json) ?? {},\n        };\n      },\n      findInstanceByHostAndOwner: async (host: string, owner: string) => {\n        const row = await d1.prepare(\n          \"SELECT id, host, env_json FROM instances WHERE host = ?1 AND owner = ?2\"\n        ).bind(host, owner).first<Row>();\n        if (!row) return null;\n        return {\n          _id: String(row.id),\n          host: String(row.host),\n          env: json<Record<string, string>>(row.env_json) ?? {},\n        };\n      },\n      createInstance: async (data) => {\n        await d1.prepare(\n          \"INSERT INTO instances (host, owner, env_json, created_at) VALUES (?1, ?2, ?3, ?4)\"\n        ).bind(data.host, data.owner, JSON.stringify(data.env ?? {}), now()).run();\n      },\n      updateInstanceEnv: async (id, envMap) => {\n        await d1.prepare(\n          \"UPDATE instances SET env_json = ?2 WHERE id = ?1\"\n        ).bind(id, JSON.stringify(envMap ?? {})).run();\n      },\n      deleteInstance: async (host, owner) => {\n        await d1.prepare(\n          \"DELETE FROM instances WHERE host = ?1 AND owner = ?2\"\n        ).bind(host, owner).run();\n      },\n    },\n    oauth: {\n      list: async () => {\n        const { results } = await d1.prepare(\n          \"SELECT client_id as clientId, redirect_uri as redirectUri FROM oauth_clients ORDER BY client_id\"\n        ).all<{ clientId: string; redirectUri: string }>();\n        return results ?? [];\n      },\n      find: async (clientId: string) => {\n        const row = await d1.prepare(\n          \"SELECT client_secret as clientSecret FROM oauth_clients WHERE client_id = ?1\"\n        ).bind(clientId).first<{ clientSecret: string }>();\n        return row ?? null;\n      },\n      create: async (data) => {\n        await d1.prepare(\n          \"INSERT OR REPLACE INTO oauth_clients (client_id, client_secret, redirect_uri) VALUES (?1, ?2, ?3)\"\n        ).bind(data.clientId, data.clientSecret, data.redirectUri).run();\n      },\n    },\n    domains: {\n      list: async (user: string) => {\n        const { results } = await d1.prepare(\n          \"SELECT domain, verified FROM host_domains WHERE user_id = ?1 ORDER BY domain\"\n        ).bind(user).all<{ domain: string; verified: number }>();\n        return (results ?? []).map((r) => ({ domain: r.domain, verified: toBool(r.verified) }));\n      },\n      find: async (domain: string, user?: string) => {\n        const sql = user\n          ? \"SELECT id, token, verified FROM host_domains WHERE domain = ?1 AND user_id = ?2\"\n          : \"SELECT id, token, verified FROM host_domains WHERE domain = ?1\";\n        const row = user\n          ? await d1.prepare(sql).bind(domain, user).first<Row>()\n          : await d1.prepare(sql).bind(domain).first<Row>();\n        if (!row) return null;\n        return {\n          _id: String(row.id),\n          token: String(row.token),\n          verified: toBool(row.verified),\n        };\n      },\n      create: async (domain: string, user: string, token: string) => {\n        await d1.prepare(\n          \"INSERT INTO host_domains (user_id, domain, token, verified, created_at) VALUES (?1, ?2, ?3, 0, ?4)\"\n        ).bind(user, domain, token, now()).run();\n      },\n      verify: async (id: string) => {\n        await d1.prepare(\n          \"UPDATE host_domains SET verified = 1 WHERE id = ?1\"\n        ).bind(id).run();\n      },\n    },\n    hostUsers: {\n      findByUserName: async (userName: string) => {\n        const row = await d1.prepare(\n          \"SELECT * FROM host_users WHERE user_name = ?1\"\n        ).bind(userName).first<Row>();\n        if (!row) return null;\n        return {\n          _id: String(row.id),\n          userName: String(row.user_name),\n          email: String(row.email),\n          emailVerified: toBool(row.email_verified),\n          verifyCode: row.verify_code ? String(row.verify_code) : undefined,\n          verifyCodeExpires: row.verify_expires ? new Date(Number(row.verify_expires)) : undefined,\n          hashedPassword: String(row.hashed_password),\n          salt: String(row.salt),\n        };\n      },\n      findByUserNameOrEmail: async (userName: string, email: string) => {\n        const row = await d1.prepare(\n          \"SELECT * FROM host_users WHERE user_name = ?1 OR email = ?2\"\n        ).bind(userName, email).first<Row>();\n        if (!row) return null;\n        return {\n          _id: String(row.id),\n          userName: String(row.user_name),\n          email: String(row.email),\n          emailVerified: toBool(row.email_verified),\n          verifyCode: row.verify_code ? String(row.verify_code) : undefined,\n          verifyCodeExpires: row.verify_expires ? new Date(Number(row.verify_expires)) : undefined,\n          hashedPassword: String(row.hashed_password),\n          salt: String(row.salt),\n        };\n      },\n      create: async (data) => {\n        const id = crypto.randomUUID();\n        await d1.prepare(\n          \"INSERT INTO host_users (id, user_name, email, email_verified, verify_code, verify_expires, hashed_password, salt, created_at) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9)\"\n        ).bind(\n          id,\n          data.userName,\n          data.email,\n          data.emailVerified === true ? 1 : 0,\n          data.verifyCode ?? null,\n          data.verifyCodeExpires ? data.verifyCodeExpires.getTime() : null,\n          data.hashedPassword,\n          data.salt,\n          now(),\n        ).run();\n        return {\n          _id: id,\n          userName: data.userName,\n          email: data.email,\n          emailVerified: data.emailVerified === true,\n          hashedPassword: data.hashedPassword,\n          salt: data.salt,\n        };\n      },\n      update: async (id, data) => {\n        const sets: string[] = [];\n        const vals: unknown[] = [];\n        const push = (col: string, val: unknown) => { sets.push(`${col} = ?${sets.length + 1}`); vals.push(val); };\n        if (data.userName !== undefined) push(\"user_name\", data.userName);\n        if (data.email !== undefined) push(\"email\", data.email);\n        if (data.hashedPassword !== undefined) push(\"hashed_password\", data.hashedPassword);\n        if (data.salt !== undefined) push(\"salt\", data.salt);\n        if (data.verifyCode !== undefined) push(\"verify_code\", data.verifyCode);\n        if (data.verifyCodeExpires !== undefined) push(\"verify_expires\", data.verifyCodeExpires ? data.verifyCodeExpires.getTime() : null);\n        if (data.emailVerified !== undefined) push(\"email_verified\", data.emailVerified ? 1 : 0);\n        if (sets.length === 0) return;\n        const sql = `UPDATE host_users SET ${sets.join(\", \")} WHERE id = ?${sets.length + 1}`;\n        vals.push(id);\n        await d1.prepare(sql).bind(...vals).run();\n      },\n    },\n    hostSessions: {\n      findById: async (sessionId: string) => {\n        const row = await d1.prepare(\n          \"SELECT session_id, user_id, expires_at FROM host_sessions WHERE session_id = ?1\"\n        ).bind(sessionId).first<{ session_id: string; user_id: string; expires_at: number }>();\n        return row\n          ? { sessionId: row.session_id, user: row.user_id, expiresAt: new Date(Number(row.expires_at)) }\n          : null;\n      },\n      create: async (data) => {\n        await d1.prepare(\n          \"INSERT INTO host_sessions (session_id, user_id, expires_at, created_at) VALUES (?1, ?2, ?3, ?4)\"\n        ).bind(data.sessionId, data.user, data.expiresAt.getTime(), now()).run();\n        return { sessionId: data.sessionId, user: data.user, expiresAt: data.expiresAt };\n      },\n      update: async (sessionId, data) => {\n        await d1.prepare(\n          \"UPDATE host_sessions SET expires_at = ?2 WHERE session_id = ?1\"\n        ).bind(sessionId, data.expiresAt.getTime()).run();\n      },\n      delete: async (sessionId: string) => {\n        await d1.prepare(\n          \"DELETE FROM host_sessions WHERE session_id = ?1\"\n        ).bind(sessionId).run();\n      },\n    },\n  };\n}\n", "// Cloudflare D1 \u7528\u30B9\u30AD\u30FC\u30DE\uFF08\u958B\u767A\u6642\u306E\u81EA\u52D5\u521D\u671F\u5316\u5411\u3051\uFF09\n// \u672C\u756A\u3067\u306F wrangler d1 execute/migrations \u306E\u5229\u7528\u3092\u63A8\u5968\u3057\u307E\u3059\u3002\n\nexport const D1_SCHEMA = `\nPRAGMA foreign_keys = ON;\n\nCREATE TABLE IF NOT EXISTS tenants (\n  id TEXT PRIMARY KEY,\n  domain TEXT NOT NULL,\n  created_at INTEGER NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS instances (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  host TEXT NOT NULL UNIQUE,\n  owner TEXT NOT NULL,\n  env_json TEXT,\n  created_at INTEGER NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS oauth_clients (\n  client_id TEXT PRIMARY KEY,\n  client_secret TEXT NOT NULL,\n  redirect_uri TEXT NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS host_domains (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  user_id TEXT NOT NULL,\n  domain TEXT NOT NULL,\n  token TEXT NOT NULL,\n  verified INTEGER NOT NULL DEFAULT 0,\n  created_at INTEGER NOT NULL,\n  UNIQUE(user_id, domain)\n);\n\nCREATE TABLE IF NOT EXISTS host_users (\n  id TEXT PRIMARY KEY,\n  user_name TEXT NOT NULL UNIQUE,\n  email TEXT NOT NULL UNIQUE,\n  email_verified INTEGER NOT NULL DEFAULT 0,\n  verify_code TEXT,\n  verify_expires INTEGER,\n  hashed_password TEXT NOT NULL,\n  salt TEXT NOT NULL,\n  created_at INTEGER NOT NULL\n);\n\nCREATE TABLE IF NOT EXISTS host_sessions (\n  session_id TEXT PRIMARY KEY,\n  user_id TEXT NOT NULL,\n  expires_at INTEGER NOT NULL,\n  created_at INTEGER NOT NULL\n);\n\nCREATE INDEX IF NOT EXISTS idx_instances_owner ON instances(owner);\nCREATE INDEX IF NOT EXISTS idx_domains_user ON host_domains(user_id);\n`;\n\n", "// Cloudflare Workers: takos host API (D1 + R2)\n// - \u3053\u306E\u30EF\u30FC\u30AB\u30FC\u306F /auth/* \u3068 /user/* \u306E\u6700\u5C0F API \u3092\u76F4\u63A5\u63D0\u4F9B\uFF08\u30B5\u30FC\u30D0\u7528\u4F9D\u5B58\u3092\u56DE\u907F\uFF09\n// - DB \u306F D1\u3001\u30B9\u30C8\u30EC\u30FC\u30B8\u306F R2\u3002\u30E1\u30FC\u30EB\u9001\u4FE1\u306F\u672A\u5B9F\u88C5\uFF08\u691C\u8A3C\u30B3\u30FC\u30C9\u306F\u767A\u884C\u306E\u307F\uFF09\n\nimport { Hono } from \"hono\";\nimport { setStoreFactory } from \"../core/db/mod.ts\";\nimport { createD1DataStore, type D1Database } from \"./db/d1_store.ts\";\nimport { D1_SCHEMA } from \"./db/d1/schema.ts\";\n\n// \u6700\u5C0F\u306E Assets \u30D0\u30A4\u30F3\u30C7\u30A3\u30F3\u30B0\ninterface AssetsBinding { fetch(req: Request): Promise<Response> }\n\nexport interface Env {\n  ASSETS: AssetsBinding;\n  // D1 \u30D0\u30A4\u30F3\u30C7\u30A3\u30F3\u30B0\n  TAKOS_HOST_DB: D1Database;\n  // R2 \u30D0\u30A4\u30F3\u30C7\u30A3\u30F3\u30B0\u540D\uFF08env[R2_BUCKET] \u3092 globalThis \u3078\u30DE\u30C3\u30D7\uFF09\n  OBJECT_STORAGE_PROVIDER?: string; // \"r2\" \u3092\u63A8\u5968\n  R2_BUCKET?: string; // \u4F8B: \"TAKOS_R2\"\n\n  // Host \u8A2D\u5B9A\n  ACTIVITYPUB_DOMAIN?: string;\n  FREE_PLAN_LIMIT?: string;\n  RESERVED_SUBDOMAINS?: string; // comma separated\n}\n\nfunction mapR2BindingToGlobal(env: Env) {\n  if ((env.OBJECT_STORAGE_PROVIDER ?? \"\").toLowerCase() !== \"r2\") return;\n  const bucketName = env.R2_BUCKET?.trim();\n  if (!bucketName) return;\n  const binding = (env as unknown as Record<string, unknown>)[bucketName];\n  if (binding) {\n    (globalThis as unknown as Record<string, unknown>)[bucketName] = binding;\n  }\n}\n\nasync function serveFromAssets(env: Env, req: Request, rewriteTo?: string) {\n  const url = new URL(req.url);\n  if (rewriteTo) url.pathname = rewriteTo;\n  let target = url;\n  // 1st fetch\n  let res = await env.ASSETS.fetch(new Request(target.toString(), req));\n  // Follow simple 3xx from assets (e.g., directory redirects)\n  const seen = new Set<string>();\n  while (res.status >= 300 && res.status < 400) {\n    const loc = res.headers.get(\"location\");\n    if (!loc) break;\n    const next = new URL(loc, target);\n    const key = next.toString();\n    if (seen.has(key)) break;\n    seen.add(key);\n    target = next;\n    res = await env.ASSETS.fetch(new Request(target.toString(), req));\n  }\n  const headers = new Headers(res.headers);\n  headers.set(\"cache-control\", \"no-store\");\n  headers.set(\"x-worker-assets-path\", target.pathname || \"/\");\n  headers.set(\"x-worker-route\", \"assets\");\n  return new Response(res.body, { status: res.status, headers });\n}\n\nexport default {\n  async fetch(req: Request, env: Env): Promise<Response> {\n    // \u958B\u767A\u6642: D1 \u30B9\u30AD\u30FC\u30DE\u3092\uFF08\u51AA\u7B49\u306B\uFF09\u9069\u7528\n    if (!(globalThis as any)._takos_d1_inited) {\n      try {\n        const stmts = D1_SCHEMA.split(/;\\s*(?:\\n|$)/).map((s) => s.trim()).filter(Boolean);\n        for (const sql of stmts) {\n          await env.TAKOS_HOST_DB.prepare(sql).run();\n        }\n      } catch (e) {\n        // \u5931\u6557\u3057\u3066\u3082\u5148\u306B\u9032\u3080\uFF08\u672C\u756A\u306F migrations \u3092\u63A8\u5968\uFF09\n        console.warn(\"D1 schema init warning:\", (e as Error).message ?? e);\n      }\n      (globalThis as any)._takos_d1_inited = true;\n    }\n    // R2 \u30D0\u30A4\u30F3\u30C7\u30A3\u30F3\u30B0\u3092 globalThis \u306B\u516C\u958B\uFF08createObjectStorage \u304C\u53C2\u7167\uFF09\n    mapR2BindingToGlobal(env);\n\n    // D1 \u30C7\u30FC\u30BF\u30B9\u30C8\u30A2\u3092 Host \u7528\u306B\u5DEE\u3057\u8FBC\u3080\n    const rootDomain = (env.ACTIVITYPUB_DOMAIN ?? \"\").toLowerCase();\n    const freeLimit = Number(env.FREE_PLAN_LIMIT ?? \"1\");\n    const reserved = (env.RESERVED_SUBDOMAINS ?? \"\")\n      .split(\",\").map((s) => s.trim().toLowerCase()).filter(Boolean);\n\n    setStoreFactory((vars) => createD1DataStore({\n      OBJECT_STORAGE_PROVIDER: env.OBJECT_STORAGE_PROVIDER ?? vars[\"OBJECT_STORAGE_PROVIDER\"] ?? \"r2\",\n      R2_BUCKET: env.R2_BUCKET ?? vars[\"R2_BUCKET\"] ?? \"TAKOS_R2\",\n      ACTIVITYPUB_DOMAIN: vars[\"ACTIVITYPUB_DOMAIN\"] ?? rootDomain,\n    }, env.TAKOS_HOST_DB, { tenantId: rootDomain, multiTenant: true }));\n\n    // \u30D8\u30EB\u30D1\u30FC\n    const SESSION_COOKIE = \"hostSessionId\";\n    const SESSION_LIFETIME_MS = 7 * 24 * 60 * 60 * 1000;\n    const db = () => (globalThis as unknown as { _db: ReturnType<typeof createD1DataStore> })._db;\n    (globalThis as unknown as { _db?: ReturnType<typeof createD1DataStore> })._db ??=\n      createD1DataStore({\n        OBJECT_STORAGE_PROVIDER: env.OBJECT_STORAGE_PROVIDER ?? \"r2\",\n        R2_BUCKET: env.R2_BUCKET ?? \"TAKOS_R2\",\n        ACTIVITYPUB_DOMAIN: rootDomain,\n      }, env.TAKOS_HOST_DB, { tenantId: rootDomain, multiTenant: true });\n\n    function toCookieMap(c: string | null): Record<string, string> {\n      const out: Record<string, string> = {};\n      if (!c) return out;\n      for (const part of c.split(\";\")) {\n        const [k, v] = part.split(\"=\");\n        if (k && v) out[k.trim()] = decodeURIComponent(v);\n      }\n      return out;\n    }\n    function setCookieHeader(name: string, value: string, secure: boolean, expires: Date) {\n      const attrs = [\n        `${name}=${encodeURIComponent(value)}`,\n        `Path=/`,\n        `SameSite=Lax`,\n        `Expires=${expires.toUTCString()}`,\n      ];\n      if (secure) attrs.push(\"Secure\");\n      attrs.push(\"HttpOnly\");\n      return attrs.join(\"; \");\n    }\n    async function sha256Hex(text: string) {\n      const data = new TextEncoder().encode(text);\n      const digest = await crypto.subtle.digest(\"SHA-256\", data);\n      return Array.from(new Uint8Array(digest)).map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n    }\n    function jsonRes(body: unknown, status = 200) {\n      return new Response(JSON.stringify(body), { status, headers: { \"content-type\": \"application/json\" } });\n    }\n\n    // Hono \u30A2\u30D7\u30EA\u69CB\u7BC9\uFF08\u6700\u5C0F\uFF09\n    const app = new Hono({ strict: false });\n\n    // SPA \u30A8\u30F3\u30C8\u30EA + \u4E3B\u8981\u30D5\u30ED\u30F3\u30C8\u30EB\u30FC\u30C8\n    app.get(\"/user\", (c) => serveFromAssets(env, c.req.raw, \"/index.html\"));\n    app.get(\"/auth\", (c) => serveFromAssets(env, c.req.raw, \"/index.html\"));\n    app.get(\"/signup\", (c) => serveFromAssets(env, c.req.raw, \"/index.html\"));\n    app.get(\"/verify\", (c) => serveFromAssets(env, c.req.raw, \"/index.html\"));\n    app.get(\"/terms\", (c) => serveFromAssets(env, c.req.raw, \"/index.html\"));\n    app.get(\"/robots.txt\", (c) => serveFromAssets(env, c.req.raw, \"/robots.txt\"));\n\n    // /auth/*, /user/* \u306E GET \u306F\u3001API \u30D1\u30B9\u3092\u9664\u5916\u3057\u305F\u4E0A\u3067\u9759\u7684\u30A2\u30BB\u30C3\u30C8\u3078\u30EA\u30E9\u30A4\u30C8\n    app.get(\"/auth/*\", async (c, next) => {\n      // API GET: /auth/status \u306F\u901A\u3059\n      if (c.req.path === \"/auth/status\") return await next();\n      const p = c.req.path.replace(/^\\/auth/, \"\");\n      return serveFromAssets(env, c.req.raw, p || \"/index.html\");\n    });\n    app.get(\"/user/*\", async (c, next) => {\n      // API GET \u4E00\u89A7\u306F\u901A\u3059\n      if (/^\\/user\\/(instances|oauth|domains)(\\/|$)/.test(c.req.path)) {\n        return await next();\n      }\n      const p = c.req.path.replace(/^\\/user/, \"\");\n      return serveFromAssets(env, c.req.raw, p || \"/index.html\");\n    });\n\n    // ---- /auth ----\n    app.post(\"/auth/register\", async (c) => {\n      const { userName, email, password } = await c.req.json().catch(() => ({} as Record<string, unknown>));\n      if (typeof userName !== \"string\" || typeof email !== \"string\" || typeof password !== \"string\") {\n        return jsonRes({ error: \"invalid\" }, 400);\n      }\n      const exists = await db().hostUsers.findByUserNameOrEmail(userName, email);\n      if (exists && exists.emailVerified) return jsonRes({ error: \"exists\" }, 400);\n      const salt = crypto.randomUUID();\n      const hashedPassword = await sha256Hex(password + salt);\n      if (exists && !exists.emailVerified) {\n        await db().hostUsers.update(exists._id, {\n          userName,\n          email,\n          salt,\n          hashedPassword,\n          emailVerified: true, // \u30E1\u30FC\u30EB\u9001\u4FE1\u306A\u3057\u3067\u5373\u6642\u6709\u52B9\u5316\uFF08Workers \u74B0\u5883\u7528\uFF09\n          verifyCode: null,\n          verifyCodeExpires: null,\n        });\n        return jsonRes({ success: true });\n      }\n      await db().hostUsers.create({\n        userName,\n        email,\n        hashedPassword,\n        salt,\n        verifyCode: \"\",\n        verifyCodeExpires: new Date(),\n        emailVerified: true, // \u7C21\u7565\u5316\n      });\n      return jsonRes({ success: true });\n    });\n\n    app.post(\"/auth/login\", async (c) => {\n      const { userName, password } = await c.req.json().catch(() => ({} as Record<string, unknown>));\n      if (typeof userName !== \"string\" || typeof password !== \"string\") return jsonRes({ error: \"invalid\" }, 400);\n      const user = await db().hostUsers.findByUserName(userName);\n      if (!user || !user.emailVerified) return jsonRes({ error: \"invalid\" }, 401);\n      const ok = (await sha256Hex(password + user.salt)) === user.hashedPassword;\n      if (!ok) return jsonRes({ error: \"invalid\" }, 401);\n      const sid = crypto.randomUUID();\n      const expires = new Date(Date.now() + SESSION_LIFETIME_MS);\n      await db().hostSessions.create({ sessionId: sid, user: user._id, expiresAt: expires });\n      const secure = c.req.url.startsWith(\"https://\");\n      const headers = new Headers({ \"set-cookie\": setCookieHeader(SESSION_COOKIE, sid, secure, expires) });\n      return new Response(JSON.stringify({ success: true }), { status: 200, headers });\n    });\n\n    app.get(\"/auth/status\", async (c) => {\n      const cookies = toCookieMap(c.req.header(\"cookie\") ?? null);\n      const sid = cookies[SESSION_COOKIE];\n      const body = { login: false, rootDomain, termsRequired: false } as Record<string, unknown>;\n      if (!sid) return jsonRes(body);\n      const sess = await db().hostSessions.findById(sid);\n      if (!sess || sess.expiresAt <= new Date()) return jsonRes(body);\n      const newExp = new Date(Date.now() + SESSION_LIFETIME_MS);\n      await db().hostSessions.update(sid, { expiresAt: newExp });\n      const secure = c.req.url.startsWith(\"https://\");\n      const headers = new Headers({ \"set-cookie\": setCookieHeader(SESSION_COOKIE, sid, secure, newExp) });\n      return new Response(JSON.stringify({ login: true, user: sess.user, rootDomain, termsRequired: false }), { headers });\n    });\n\n    app.delete(\"/auth/logout\", async (c) => {\n      const cookies = toCookieMap(c.req.header(\"cookie\") ?? null);\n      const sid = cookies[SESSION_COOKIE];\n      if (sid) await db().hostSessions.delete(sid);\n      return jsonRes({ success: true });\n    });\n\n    // \u8A8D\u8A3C\u30DF\u30C9\u30EB\u30A6\u30A7\u30A2\uFF08\u7C21\u6613\uFF09\n    app.use(\"/user/*\", async (c, next) => {\n      const cookies = toCookieMap(c.req.header(\"cookie\") ?? null);\n      const sid = cookies[SESSION_COOKIE];\n      if (!sid) return jsonRes({ error: \"unauthorized\" }, 401);\n      const sess = await db().hostSessions.findById(sid);\n      if (!sess || sess.expiresAt <= new Date()) return jsonRes({ error: \"unauthorized\" }, 401);\n      (c as unknown as { userId: string }).userId = sess.user;\n      await next();\n    });\n\n    // ---- /user ----\n    app.get(\"/user/instances\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const list = await db().host.listInstances(userId);\n      return jsonRes(list);\n    });\n\n    app.post(\"/user/instances\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const { host: rawHost, password } = await c.req.json().catch(() => ({} as Record<string, unknown>));\n      if (typeof rawHost !== \"string\") return jsonRes({ error: \"invalid\" }, 400);\n      const over = (await db().host.countInstances(userId)) >= freeLimit;\n      if (over) return jsonRes({ error: \"limit\" }, 400);\n      const lower = rawHost.toLowerCase();\n      let fullHost = lower;\n      const isReserved = (s: string) => reserved.includes(s);\n      if (rootDomain) {\n        if (lower.includes(\".\")) {\n          if (!lower.endsWith(`.${rootDomain}`) || lower === rootDomain) return jsonRes({ error: \"domain\" }, 400);\n          const sub = lower.slice(0, -rootDomain.length - 1);\n          if (isReserved(sub)) return jsonRes({ error: \"reserved\" }, 400);\n        } else {\n          if (isReserved(lower)) return jsonRes({ error: \"reserved\" }, 400);\n          fullHost = `${lower}.${rootDomain}`;\n        }\n      } else if (isReserved(lower)) return jsonRes({ error: \"reserved\" }, 400);\n      if (await db().host.findInstanceByHost(fullHost)) return jsonRes({ error: \"already exists\" }, 400);\n      const envVars: Record<string, string> = {};\n      if (rootDomain) {\n        envVars.OAUTH_HOST = rootDomain;\n        const redirect = `https://${fullHost}`;\n        const clientId = redirect;\n        const found = await db().oauth.find(clientId);\n        const clientSecret = found?.clientSecret ?? crypto.randomUUID();\n        if (!found) await db().oauth.create({ clientId, clientSecret, redirectUri: redirect });\n        envVars.OAUTH_CLIENT_ID = clientId;\n        envVars.OAUTH_CLIENT_SECRET = clientSecret;\n      }\n      if (typeof password === \"string\" && password) {\n        const salt = crypto.randomUUID();\n        envVars.hashedPassword = await sha256Hex(password + salt);\n        envVars.salt = salt;\n      }\n      await db().host.createInstance({ host: fullHost, owner: userId, env: envVars });\n      await db().tenant.ensure(fullHost);\n      return jsonRes({ success: true, host: fullHost });\n    });\n\n    app.delete(\"/user/instances/:host\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const host = c.req.param(\"host\").toLowerCase();\n      await db().host.deleteInstance(host, userId);\n      return jsonRes({ success: true });\n    });\n\n    app.get(\"/user/instances/:host\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const host = c.req.param(\"host\").toLowerCase();\n      const inst = await db().host.findInstanceByHostAndOwner(host, userId);\n      if (!inst) return jsonRes({ error: \"not found\" }, 404);\n      return jsonRes({ host: inst.host });\n    });\n\n    app.put(\"/user/instances/:host/password\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const host = c.req.param(\"host\").toLowerCase();\n      const { password } = await c.req.json().catch(() => ({} as Record<string, unknown>));\n      const inst = await db().host.findInstanceByHostAndOwner(host, userId);\n      if (!inst) return jsonRes({ error: \"not found\" }, 404);\n      const newEnv = { ...(inst.env ?? {}) } as Record<string, string>;\n      if (typeof password === \"string\" && password) {\n        const salt = crypto.randomUUID();\n        newEnv.hashedPassword = await sha256Hex(password + salt);\n        newEnv.salt = salt;\n      } else {\n        delete newEnv.hashedPassword; delete newEnv.salt;\n      }\n      await db().host.updateInstanceEnv(inst._id, newEnv);\n      return jsonRes({ success: true });\n    });\n\n    app.post(\"/user/instances/:host/restart\", async (_c) => jsonRes({ success: true }));\n\n    // OAuth clients\n    app.get(\"/user/oauth/clients\", async () => jsonRes(await db().oauth.list()));\n    app.post(\"/user/oauth/clients\", async (c) => {\n      const { clientId, clientSecret, redirectUri } = await c.req.json().catch(() => ({} as Record<string, unknown>));\n      if (typeof clientId !== \"string\" || typeof clientSecret !== \"string\" || typeof redirectUri !== \"string\") return jsonRes({ error: \"invalid\" }, 400);\n      if (await db().oauth.find(clientId)) return jsonRes({ error: \"exists\" }, 400);\n      await db().oauth.create({ clientId, clientSecret, redirectUri });\n      return jsonRes({ success: true });\n    });\n\n    // Domains\n    app.get(\"/user/domains\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      return jsonRes(await db().domains.list(userId));\n    });\n    app.post(\"/user/domains\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const { domain } = await c.req.json().catch(() => ({} as Record<string, unknown>));\n      if (typeof domain !== \"string\") return jsonRes({ error: \"invalid\" }, 400);\n      if (await db().domains.find(domain)) return jsonRes({ error: \"exists\" }, 400);\n      const token = crypto.randomUUID();\n      await db().domains.create(domain, userId, token);\n      return jsonRes({ success: true, token });\n    });\n    app.post(\"/user/domains/:domain/verify\", async (c) => {\n      const userId = (c as unknown as { userId: string }).userId;\n      const domain = c.req.param(\"domain\");\n      const doc = await db().domains.find(domain, userId);\n      if (!doc) return jsonRes({ error: \"not found\" }, 404);\n      try {\n        const res = await fetch(`http://${domain}/.well-known/takos-host-verification.txt`);\n        if (res.ok && (await res.text()).trim() === (doc as { token: string }).token) {\n          await db().domains.verify((doc as { _id: string })._id);\n          return jsonRes({ success: true });\n        }\n      } catch { /* ignore */ }\n      return jsonRes({ error: \"verify\" }, 400);\n    });\n\n    // \u305D\u308C\u4EE5\u5916\u306F 404 \u2192 SPA \u30D5\u30A9\u30FC\u30EB\u30D0\u30C3\u30AF\n    const res = await app.fetch(req, env);\n    if (res.status !== 404) return res;\n    if (req.method === \"GET\") {\n      return await serveFromAssets(env, req, \"/index.html\");\n    }\n    return res;\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\shout\\\\Desktop\\\\temp\\\\takos\\\\app\\\\takos_host\\\\host_api_worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\shout\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\shout\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\shout\\\\Desktop\\\\temp\\\\takos\\\\app\\\\takos_host\\\\host_api_worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\shout\\\\Desktop\\\\temp\\\\takos\\\\.wrangler\\\\tmp\\\\bundle-919aum\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\shout\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\shout\\\\Desktop\\\\temp\\\\takos\\\\.wrangler\\\\tmp\\\\bundle-919aum\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\shout\\\\Desktop\\\\temp\\\\takos\\\\.wrangler\\\\tmp\\\\bundle-919aum\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "now", "dir", "env", "count", "cwd", "hrtime", "assert", "context", "raw", "context", "env", "context", "context", "Node", "Node", "Hono", "notImplemented", "env", "binding", "domain", "env", "binding", "Hono", "domain", "res", "env", "env", "error", "env", "env"]
}
